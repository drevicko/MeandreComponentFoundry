<html>
  <head>
    <title>$title</title>
    <script type="text/javascript" src="$protovisAPI"></script>

    <style type="text/css">
        #fig {
            width:  1000px;
            height: 1000px;
        }
    </style>
  </head>
  <body>
    <div class="caption">
          An arc diagram uses nodes and labels to represent subjects and
          circular arcs to represent links connecting any pair of subjects.
    </div>
    <div id="center"><div id="fig">

        <!--
        <script type="text/javascript" src="CMI.js"></script>
        -->


        <script type="text/javascript+protovis">
            var graphData = $data;
            var minWidth = 20.0; /* icon min size */
            var baseLog  = 2;    /* radius of the nodes */
            var colors = pv.Scale.linear(0, 1).range('yellow', 'red');

            var mean = pv.mean(graphData.links, function(d) d.value);
            var sd   = pv.deviation(graphData.links, function(d) d.value);
            var max  = pv.max(graphData.links, function(d) d.value);


            var vis = new pv.Panel()
                .width(graphData.nodes.length * minWidth * 1.50)
                .height(graphData.nodes.length * 10)
                .margin(10)
                .bottom(200);

            var layout = vis.add(pv.Layout.Arc)
                .nodes(graphData.nodes)
                .links(graphData.links)
                .sort(function(a, b) {
                   return a.group == b.group
                        ? b.linkDegree - a.linkDegree
                        : b.group < a.group; /* group is categorical */
                });

            layout.link.add(pv.Line)
                .strokeStyle(function(n,l) {
                   var est = (l.value - mean)/sd
                   if (est <= 0) {
                     est = -1.0 * est;
                   }
                   if (est > 2.0) {
                      est = 2.0;
                  }
                  // normalize to 0..1
                  est = est/2.0;
                  return colors(est);
                 })
               .lineWidth(function(n,l) {
                  return pv.log(l.value,2);
                });


            layout.node.add(pv.Dot)
                // .size(function(d) d.linkDegree + 4)
                .radius(function(d) + minWidth/4.0 + pv.log(d.linkDegree,baseLog))
                .fillStyle(pv.Colors.category19().by(function(d) d.group))
                .strokeStyle(function() this.fillStyle().darker());

            layout.label.add(pv.Label)
				   .font(function(n,l)  20 + "px sans-serif")
					;


            vis.render();
        </script>

        <div>
          <table>
            <tr>
            <td>Number of Nodes</td>
            <td align="right"> <div id='NumNodes'> </div> </td>
            </tr>
            <tr>
            <td>Number of Links</td>
            <td align="right"> <div id='NumLinks'> </div> </td>
            </tr>
          </table>

        <script type="text/javascript+protovis">
                document.getElementById('NumNodes').innerHTML = graphData.nodes.length;
                document.getElementById('NumLinks').innerHTML = graphData.links.length;
        </script>

        </div>

    </div></div>
  </body>
</html>
