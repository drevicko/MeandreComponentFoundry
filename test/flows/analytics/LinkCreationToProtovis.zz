#
# Generated by RDF2ZZConverter on Wed May 19 15:02:48 CDT 2010
#
# @name 	Link Creation To Protovis
# @description 	This flow extracts entities; creates links between entities within a sentence and outputs a json object for Protovis link node display.
# @creator 	admin
# @date 	Wed May 19 14:49:53 CDT 2010
# @rights 	University of Illinois/NCSA/Open Source License
# @tags 	entities, protovis, visualization
# @uri  	http://seasr.org/flows/links/
#

#
# Specify component imports
#
# TODO: Add component import statement(s) here
# Example: import <URL>   (replace 'URL' with the correct location)

#
# Create the component aliases
#
alias <meandre://seasr.org/components/foundry/link-creation-to-protovis> as LINK_CREATION_TO_PROTOVIS
alias <meandre://seasr.org/components/foundry/html-viewer> as HTML_VIEWER
alias <meandre://seasr.org/components/foundry/opennlp-sentence-tokenizer> as OPENNLP_SENTENCE_TOKENIZER
alias <meandre://seasr.org/components/foundry/push-text> as PUSH_TEXT
alias <meandre://seasr.org/components/foundry/opennlp-named-entity> as OPENNLP_NAMED_ENTITY
alias <meandre://seasr.org/components/foundry/opennlp-sentence-detector> as OPENNLP_SENTENCE_DETECTOR
alias <meandre://seasr.org/components/foundry/tuple-logger> as TUPLE_LOGGER

#
# Create the component instances
#
html_viewer = HTML_VIEWER()
tuple_logger = TUPLE_LOGGER()
push_text = PUSH_TEXT()
opennlp_sentence_detector = OPENNLP_SENTENCE_DETECTOR()
opennlp_sentence_tokenizer = OPENNLP_SENTENCE_TOKENIZER()
opennlp_named_entity = OPENNLP_NAMED_ENTITY()
link_creation_to_protovis = LINK_CREATION_TO_PROTOVIS()

#
# Set component properties
#
html_viewer._ignore_errors = "false"
html_viewer.template = "org/seasr/meandre/components/vis/html/HTMLViewer.vm"
html_viewer._debug_level = "info"

tuple_logger._ignore_errors = "false"
tuple_logger.columnSet = ""
tuple_logger._debug_level = "info"

push_text._ignore_errors = "false"
push_text.message = "This is an empty sentence created on May 1, 2010. However, Boris wants to test his flow. Therefore, I think he will add Mike Haberman and John Doe to his tests on May 2, 2010 at noon. Maybe we can ask Mary to see if she wants to join the test. Lastly, another empty sentence. Robert Moore likes my tests. Finally, this is the last sentence written by Boris."
push_text._debug_level = "info"

opennlp_sentence_detector.openNLPdir = ""
opennlp_sentence_detector._ignore_errors = "false"
opennlp_sentence_detector._debug_level = "info"
opennlp_sentence_detector.language = "english"

opennlp_sentence_tokenizer.openNLPdir = ""
opennlp_sentence_tokenizer._ignore_errors = "false"
opennlp_sentence_tokenizer._debug_level = "info"
opennlp_sentence_tokenizer.language = "english"

opennlp_named_entity._ignore_errors = "false"
opennlp_named_entity.openNLPdir = ""
opennlp_named_entity.language = "english"
opennlp_named_entity.ExtendedNETypes = "location,url"
opennlp_named_entity._debug_level = "info"
opennlp_named_entity.NETypes = "person,location,date,organization"

link_creation_to_protovis._ignore_errors = "false"
link_creation_to_protovis._debug_level = "info"
link_creation_to_protovis.entities = "person"
link_creation_to_protovis.offset = "1"

#
# Create the flow by connecting the components
#
@opennlp_sentence_tokenizer_outputs = opennlp_sentence_tokenizer()
@opennlp_named_entity_outputs = opennlp_named_entity()
@push_text_outputs = push_text()
@opennlp_sentence_detector_outputs = opennlp_sentence_detector()
@link_creation_to_protovis_outputs = link_creation_to_protovis()

opennlp_sentence_tokenizer(sentences: opennlp_sentence_detector_outputs.sentences)
html_viewer(html: link_creation_to_protovis_outputs.json)
opennlp_named_entity(tokenized_sentences: opennlp_sentence_tokenizer_outputs.tokenized_sentences)
opennlp_sentence_detector(text: push_text_outputs.text)
link_creation_to_protovis(
	tuples: opennlp_named_entity_outputs.tuples;
	meta_tuple: opennlp_named_entity_outputs.meta_tuple
)

